#platform=x86, AMD64, or Intel EM64T
#version=DEVEL
#repo --name=xs-extra --baseurl=http://download.unleashkids.org/xsce/repos/xs-extra
#repo --name=xsce-extra --baseurl=http://download.unleashkids.org/xsce/repos/xsce-extra
#repo --name=xsce-testing --baseurl=http://download.unleashkids.org/xsce/repos/xsce/testing
#repo --name=local --baseurl=file:///opt/schoolserver/yum-packages/

%include fedora-live-base.ks
%include fedora-live-minimization.ks
part / --size 8192 --fstype ext4
services --enabled=NetworkManager,sshd --disabled=network
selinux --disabled
firewall --disabled
network --hostname=schoolserver --device=link
%packages
wget
git
ansible1.9
@basic-desktop
openbox
patch
@basic-desktop
@networkmanager-submodules

# ansible issues
# https://fedorahosted.org/cloud/ticket/126
python2
python-dnf
libsemanage-python
libselinux-python
python-dnf
python-firewall

# dnf mirror updatea issues below
yum
yum-utils
createrepo
redhat-rpm-config
php-devel
pcre-devel
samba
libxml2-devel
npm

%end

%post
# make kickstart see ansible
echo "path is $PATH"
export PATH=/usr/bin:/usr/sbin:/sbin:/bin:$PATH
echo "path is $PATH"

#enable updates-testing till the mirrors straighen out
#sed -i 's|enabled=0|enabled=1|' /etc/yum.repos.d/fedora-updates-testing.repo
sed -i 's|enabled=0|enabled=1|' /etc/yum.repos.d/fedora-updates.repo

echo "nameserver 8.8.8.8" > /etc/resolv.conf

# make the default install path
mkdir -p /opt/schoolserver
cd /opt/schoolserver

### release flow
git clone --depth 10 --branch release-6.1 https://github.com/XSCE/xsce
cd xsce

# pre-seed master so the same commit hash is in both branches for a common 
# starting point
git checkout -b master

# run the install in different branch
git checkout -b installer

### custom testing branch
#PR=740
#wget -O /run/$PR.diff https://patch-diff.githubusercontent.com/raw/XSCE/xsce/pull/$PR.diff

#patch -p 1 -i /run/$PR.diff
#git commit -a -m "PR #$PR"

## set preload time options here

# Don't start services while in the chroot
# turn on and off what you want to preload for other than default
cat > /opt/schoolserver/xsce/vars/local_vars.yml << EOF
installing: True
docker_install: False
schooltool_install: False

dhcpd_install: True
named_install: True
dansguardian_install: True
squid_install: True
openvpn_install: True

postgresql_install: True
mysql_install: True

samba_install: True
authserver_install: True
usb_lib_install: True
ejabberd_install: True
idmgr_install: True
activity-server_install: True
elgg_install: True
owncloud_install: True
moodle_install: True
iiab_install: True
pathagar_install: True
rachel_install: True
kiwix_install: True
kalite_install: True
sugar_stats_install: True
ajenti_install: True
munin_install: True
monit_install: True
vnstat_install: True
awstats_install: True
xovis_install: True
teamviewer_install: False

wordpress_install: True

EOF

./runtags download,download2 | tee -a xsce-image.log

# Don't start services while in the chroot
cat > /opt/schoolserver/xsce/vars/local_vars.yml << EOF
installing: True
#no_admin: True
EOF

### prep the image
./install-console | tee -a xsce-kickstart.log

# get rid of custom local_vars
git reset --hard 
git checkout release-6.1

#disable updates-testing
sed -i 's|enabled=1|enabled=0|' /etc/yum.repos.d/fedora-updates-testing.repo

cat > /usr/bin/xsceinst << FOE
#!/usr/bin/bash
#check if anaconda is running 
results=\`ps -a  | grep anaconda | awk '{print \$1}'\`
echo \$results > /root/anaconda-state
if ! [ x\$results = x ]; then
    systemctl stop anaconda
    kill -9 \$results > /dev/null
    anaconda-cleanup
fi
liveinst -G
FOE
chmod 755 /usr/bin/xsceinst

#### On the livecd runs anaconda on boot
### this file is a run once and tossed away after setup
cat > /etc/rc.d/init.d/xsce-installer << FOE
#!/bin/bash
#
# live: Late init script for live image
#
# chkconfig: 345 00 99
# description: Late init script for live image.

. /etc/init.d/functions

# disable and cleanup
if [ -e /.xsce-installed ] ; then
    systemctl disable xsce-installer
    /sbin/chkconfig --del xsce-installer
    #rm /etc/rc.d/init.d/xsce-installer
    #rm /.xsce-installed
    exit 0
fi

### Call the installer here we don't really have to check the cmdline
### textinst needs a compelte kickstart file, not there yet
# set up lightdm autologin
sed -i 's/^#autologin-user=.*/autologin-user=liveuser/' /etc/lightdm/lightdm.conf
sed -i 's/^#autologin-user-timeout=.*/autologin-user-timeout=0/' /etc/lightdm/lightdm.conf

# set openbox as default session, otherwise login will fail
sed -i 's/^#user-session=.*/user-session=openbox/' /etc/lightdm/lightdm.conf

# point to xsceisnt
mkdir -p /home/liveuser/.config/openbox
echo "/usr/bin/xterm" > /home/liveuser/.config/openbox/autostart 
chmod +x /home/liveuser/.config/openbox/autostart

# this goes at the end after all other changes. 
chown -R liveuser:liveuser /home/liveuser
restorecon -R /home/liveuser
FOE

chmod 755 /etc/rc.d/init.d/xsce-installer
chkconfig --add xsce-installer
systemctl enable xsce-installer
restorecon /etc/rc.d/init.d/xsce-installer

# don't want to mess with bootloader files
# have to hijack anaconda's default kickstart file
ADDKS=/opt/schoolserver/xsce/installer/ks-scripts/demo.ks
TARGET=/usr/share/anaconda/interactive-defaults.ks
# could change to sed out firstboot 

echo "%include $ADDKS" >> $TARGET
echo "" > /etc/resolv.conf
rm /etc/xsce/uuid

%end

%post --nochroot
cp `pwd`/ks.cfg $LIVE_ROOT/LiveOS
cp `pwd`/*.ks $LIVE_ROOT/LiveOS
cp `pwd`/mkiso* $LIVE_ROOT/LiveOS
%end
