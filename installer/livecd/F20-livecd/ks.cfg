#platform=x86, AMD64, or Intel EM64T
#version=DEVEL
#repo --name=xs-extra --baseurl=http://download.unleashkids.org/xsce/repos/xs-extra
#repo --name=xsce-extra --baseurl=http://download.unleashkids.org/xsce/repos/xsce-extra
#repo --name=xsce-testing --baseurl=http://download.unleashkids.org/xsce/repos/xsce/testing

%include fedora-live-base.ks
%include fedora-live-minimization.ks
part / --size 4096 --fstype ext4
services --enabled=NetworkManager,sshd --disabled=network
selinux --disabled
firewall --disabled
network --hostname=schoolserver.lan --device=link
%packages
wget
git
ansible
python-pip
%end

%post
# make kickstart see ansible
echo "path is $PATH"
export PATH=/usr/bin:/usr/sbin:/sbin:/bin:$PATH
echo "path is $PATH"

# make the default install path
mkdir -p /opt/schoolserver
cd /opt/schoolserver

### release flow
git clone --depth 1 --branch build_freeze https://github.com/XSCE/xsce 
cd xsce
#git branch <ver> 
#git checkout <ver> 
#git pull origin <ver>

### custom testing branch
#git clone --depth 1 https://github.com/XSCE/xsce 
#cd xsce
#git remote add jv https://github.com/jvonau/xsce
#git fetch --depth 1 jv 
#git checkout --track -b install jv/installer4

# set install time options here
cat > /opt/schoolserver/xsce/vars/local_vars.yml  << EOF
postgresql_install: True
mysql_install: True
pathagar_install: True
EOF

### prep the image
./runtags download,download2 | tee -a xsce-image.log

# now that the image is prepped turn off requiring network
#cat > /opt/schoolserver/xsce/vars/local_vars.yml  << EOF
#use_cache: True
#no_network: True
#EOF

# get rid of custom local_vars
git reset --hard

#### On the livecd 
### this file is a run once and tossed away after setup
cat > /etc/rc.d/init.d/xsce-installer << FOE
#!/bin/bash
#
# live: Late init script for live image
#
# chkconfig: 345 00 99
# description: Late init script for live image.

. /etc/init.d/functions

# disable and cleanup
if [ -e /.xsce-installed ] ; then
    systemctl disable xsce-installer
    /sbin/chkconfig --del xsce-installer
    #rm /etc/rc.d/init.d/xsce-installer
    #rm /.xsce-installed
    exit 0
fi

### Call the installer here we don't really have to check the cmdline
### textinst needs a compelte kickstart file, not there yet

# start anaconda with liveinst or textinst if on boot cmdline 
if strstr "\`cat /proc/cmdline\`" textinst ; then
   plymouth --quit
   /usr/sbin/liveinst --text
fi

plymouth --quit
/usr/sbin/liveinst

FOE

# run install-console on first boot
cat > /etc/rc.d/init.d/xsce-prep << EOF
#!/bin/bash
#
# xsce: Init script for xsce-prep
#
# chkconfig: 345 00 98

# description: Init script for XSCE prep.
### BEGIN INIT INFO
# X-Start-Before: display-manager
### END INIT INFO

. /etc/init.d/functions

### 
if [ -e /.xsce-prepped ] ; then
    systemctl disable xsce-prep
    #/sbin/chkconfig --del xsce-prep
    #rm /etc/rc.d/init.d/xsce-prep
    exit 0
fi

/opt/schoolserver/xsce/install-console > /opt/schoolserver/xsce/xsce-firstboot.log

# should be in ansible 
# Mark things as configured
touch /.xsce-prepped
EOF

chmod 755 /etc/rc.d/init.d/xsce-prep
/sbin/restorecon /etc/rc.d/init.d/xsce-prep
/sbin/chkconfig --add xsce-prep

chmod 755 /etc/rc.d/init.d/xsce-installer
/sbin/restorecon /etc/rc.d/init.d/xsce-installer
#/sbin/chkconfig --add xsce-installer

touch /.preload

# don't want to mess with bootloader files
# have to hijack anaconda's default kickstart file
ADDKS=/opt/schoolserver/xsce/installer/install.ks
TARGET=/usr/share/anaconda/interactive-defaults.ks
# could change to sed out firstboot 
echo "%include $ADDKS" >> $TARGET

%end

%post --nochroot
cp `pwd`/ks.cfg $LIVE_ROOT/LiveOS
cp `pwd`/*.ks $LIVE_ROOT/LiveOS
cp `pwd`/mkiso* $LIVE_ROOT/LiveOS
%end
