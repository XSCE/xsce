- name: Install packages for cmdsrv
  package: name={{ item }}
           state=installed
  with_items:
    - gcc
    - gcc-c++
    - php-devel
    - php-pear
    - python-devel
    - python-pip
    - zeromq3-devel
    - cracklib-python
  tags:
    - download

#        - zeromq3

#	pip install pyzmq  - didn't use the installed zmq rpm and the target zmq 4, not 3, for which there is no rpm.

- name: Download zeromq and python binding
  pip: name=pyzmq
       extra_args="--download {{ pip_packages_dir }}"
  when: not {{ use_cache }} and not {{ no_network }}
  tags:
    - download2

- name: Install zeromq and python binding
  pip: name=pyzmq
       extra_args="--no-index --find-links=file://{{ pip_packages_dir }}"

- name: Set the pear download_dir
  shell: "pear config-set download_dir {{ xsce_dir }}"
  tags:
    - download2

- name: Download php binding for zeromq
  shell: yes '' | pecl download zmq-beta
  when: not {{ use_cache }} and not {{ no_network }}
  tags:
    - download2

- name: Install php binding for zeromq
  shell: pecl install -f zmq*tgz
  args:
    creates: "{{ phplib_dir }}/modules/zmq.so"

- name: Download speedtest-cli
  pip: name=speedtest-cli
       extra_args="--download {{ pip_packages_dir }}"
  when: not {{ use_cache }} and not {{ no_network }}
  tags:
    - download2

- name: Install speedtest-cli
  pip: name=speedtest-cli
       extra_args="--no-index --find-links=file://{{ pip_packages_dir }}"

- name: Create admin-console directory
  file: path={{ item }}
        mode=0700
        owner=root
        group=root
        state=directory
  with_items:
    - "{{ cmdsrv_path }}"
    - "{{ cmdsrv_path }}/scripts"

- name: Install Command Server Executable
  copy: src=cmdsrv/xsce-cmdsrv
        dest="{{ cmdsrv_path }}/xsce-cmdsrv"
        mode=0700
        owner=root
        group=root

- name: Copy scripts
  copy: src={{ item }}
        dest="{{ cmdsrv_path }}/scripts"
        mode=0755
        owner=root
        group=root
  with_fileglob:
        - cmdsrv/scripts/*

- name: Copy json files
  copy: src={{ item }}
        dest="/etc/xsce"
        mode=0644
        owner=root
        group=root
  with_fileglob:
        - cmdsrv/json/*

- name: Create symlink from /common/assets to kiwix_catalog.json
  file: src=/etc/xsce/kiwix_catalog.json
        dest=/var/www/html/common/assets/kiwix_catalog.json
        owner=root
        group=root
        state=link

- name: Set permissions on sqlite db
  file: dest="{{ cmdsrv_path }}/{{xsce_cmdsrv_dbname }}"
        mode=0600
        owner=root
        group=root
        state=touch

- name: See if default config_vars.yml exists
  stat: path=/etc/xsce/config_vars.yml
  register: config_vars

- name: Install default config_vars.yml
  template: src=cmdsrv/config_vars.yml
            dest=/etc/xsce/config_vars.yml
            owner=root
            group=root
            mode=0644
  when: config_vars.stat.exists == false

- name: Create cmdsrv.conf file
  template: backup=yes
            src=cmdsrv/cmdsrv.conf.j2
            dest=/etc/xsce/cmdsrv.conf
            owner=root
            group=root
            mode=0644

# Create xsce-cmdsrv service

- name: Create xsce-cmdsrv service
  template: backup=yes
            src={{ item.src }}
            dest={{ item.dest }}
            owner=root
            group=root
            mode={{ item.mode }}
  with_items:
    - { src: 'cmdsrv/xsce-cmdsrv.service.j2', dest: '/etc/systemd/system/xsce-cmdsrv.service', mode: '0655'}
    - { src: 'cmdsrv/xsce-cmdsrv-init.j2', dest: '/usr/libexec/xsce-cmdsrv-init', mode: '0755'}
    - { src: 'cmdsrv/xsce-cmdsrv-ctl', dest: '/usr/bin/xsce-cmdsrv-ctl', mode: '0755'}
    - { src: 'cmdsrv/zmq.ini', dest: '/etc/php.d/zmq.ini', mode: '0755'}

- name: Enable xsce-cmdsrv service
  service: name=xsce-cmdsrv
           enabled=yes

#  when: xsce-cmdsrv_enabled - always enabled
