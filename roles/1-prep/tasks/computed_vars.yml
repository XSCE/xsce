# get local vars from scripts in /etc/ansible/facts.d

- name: re-read facts
  setup: filter=ansible_local

# set top level variables from local facts for convenience
- set_fact:
     xo_model: '{{ ansible_local["local_facts"]["xo_model"] }}'
     phplib_dir: '{{ ansible_local["local_facts"]["phplib_dir"] }}'
     xsce_gui_ver: '{{ ansible_local["local_facts"]["xsce_gui_ver"] }}'
     xsce_base_ver: '{{ ansible_local["local_facts"]["xsce_base_ver"] }}'
     xsce_menu_ver: '{{ ansible_local["local_facts"]["xsce_menu_ver"] }}'
     xsce_preload: '{{ ansible_local["local_facts"]["xsce_preload"] }}'
     ansible_ver: '{{ ansible_local["local_facts"]["ansble_version"] }}'

- name: Ansible Version
  set_fact: 
     ansible1: False
  when: ansible_ver != "1.9.6"

- name: Defaulting xsce_base_ver
  set_fact:
     xsce_base_ver: 0
  when: xsce_base_ver == ""

- name: Defaulting xsce_gui_ver
  set_fact:
     xsce_gui_ver: 0
  when: xsce_gui_ver == ""

- name: Defaulting xsce_menu_ver
  set_fact:
     xsce_gui_ver: 0
  when: xsce_menu_ver == ""

- name: Defaulting xsce_prepped
  set_fact:
     xsce_prepped: False
  tags:
    - download
    - download2

- name: Found New Menu
  set_fact:
     new_menu: True
  when: "{{ new_menu_version }} > {{ xsce_menu_ver }}"

- name: Set exFAT enabled for XOs
  set_fact:
     exFAT_enabled: True
  when: xo_model != "none"

- name: add version section
  ini_file: dest='{{ xsce_config_file }}'
            section=runtime
            option='{{ item.option }}'
            value='{{ item.value }}'
  with_items:
    - option: 'runtime_branch'
      value: '{{ ansible_local["local_facts"]["xsce_branch"] }}'
    - option: 'runtime_commit'
      value: '{{ ansible_local["local_facts"]["xsce_commit"] }}'
    - option: 'xsce_uuid'
      value: '{{ ansible_local["local_facts"]["xsce_uuid"] }}'
    - option: 'runtime_date'
      value: '{{ ansible_date_time["iso8601"] }}'
    - option: 'runtime_php'
      value: '{{ phplib_dir }}'
    - option: 'runtime_preload'
      value: '{{ xsce_preload }}'
    - option: 'runtime_base_ver'
      value: '{{ xsce_base_ver }}'
    - option: 'runtime_gui_ver'
      value: '{{ xsce_gui_ver }}'
    - option: 'runtime_menu_version'
      value: '{{ xsce_menu_ver }}'
    - option: 'kernel'
      value: '{{ ansible_kernel }}'
    - option: 'memory_mb'
      value: '{{ ansible_memtotal_mb }}'
    - option: 'swap_mb'
      value: '{{ ansible_swaptotal_mb }}'
    - option: 'product_id'
      value: '{{ ansible_product_uuid }}'
    - option: 'New_Menu'
      value: '{{ new_menu }}'

- include: distros.yml

# Put all computed vars here so derive properly from any prior var file
- name: Set port 80 for Admin Console
  set_fact:
    gui_port: 80
  when: not adm_cons_force_ssl

- name: Set port 443 for Admin Console
  set_fact:
    gui_port: 443
  when: adm_cons_force_ssl

- name: Turn on mysql if elgg or rachel enabled
  set_fact:
    mysql_enabled: True
  when: elgg_enabled or rachel_enabled or owncloud_enabled or phpmyadmin_enabled or wordpress_enabled

- name: Turn on mongodb if sugarizer enabled
  set_fact:
    mongodb_install: True
    mongodb_enabled: True
  when: sugarizer_enabled

# There might be other db's
- name: Turn on postgresql if moodle or pathagar enabled
  set_fact:
    postgresql_enabled: True
  when: moodle_enabled or pathagar_enabled

- name: Turn on docker if schooltool is to be installed
  set_fact:
    docker_install: True
    docker_enabled: True
  when: schooltool_enabled or schooltool_install

- name: Set kiwix source file name i686
  set_fact:
     kiwix_src_file: "kiwix-linux-i686.tar.bz2"
     kiwix_src_bin_only: False
  when: ansible_machine == "i686"

- name: Set kiwix source file name x86_64
  set_fact:
     kiwix_src_file: "kiwix-0.9-linux-x86_64.tar.bz2"
     kiwix_src_bin_only: False
  when: ansible_machine == "x86_64"

- name: Set kiwix source file name armv7l
  set_fact:
     kiwix_src_file: "kiwix-server-0.9-linux-armv5tejl.tar.bz2"
     kiwix_src_bin_only: True
  when: ansible_machine == "armv7l"
