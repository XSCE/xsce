# get local vars from scripts in /etc/ansible/facts.d

- name: re-read facts
  setup: filter=ansible_local

# moved from hw_discovery to here, after facts were read
- name: Discover if this is one of the XO models
  set_fact:
     xo_model: '{{ ansible_local["local_facts"]["xo_model"] }}'

# set top level variables from local facts for convenience
- set_fact:
     phplib_dir: '{{ ansible_local["local_facts"]["phplib_dir"] }}'
     xsce_preload: '{{ ansible_local["local_facts"]["xsce_preload"] }}'

- name: Defaulting xsce_prepped
  set_fact:
     xsce_prepped: False
  tags:
    - download
    - download2

- name: Testing for xsce_preload
  set_fact:
     use_cache: True
     no_network: True
  when: xsce_preload == "True"

- name: add version section
  ini_file: dest='{{ xsce_config_file }}'
            section=runtime
            option='{{ item.option }}'
            value='{{ item.value }}'
  with_items:
    - option: 'runtime_branch'
      value: '{{ ansible_local["local_facts"]["xsce_branch"] }}'
    - option: 'runtime_commit'
      value: '{{ ansible_local["local_facts"]["xsce_commit"] }}'
    - option: 'runtime_date'
      value: '{{ ansible_date_time["iso8601"] }}'
    - option: 'runtime_php'
      value: '{{ phplib_dir }}'
    - option: 'runtime_preload'
      value: '{{ xsce_preload }}'
    - option: 'kernel'
      value: '{{ ansible_kernel }}'
    - option: 'memory_mb'
      value: '{{ ansible_memtotal_mb }}'
    - option: 'swap_mb'
      value: '{{ ansible_swaptotal_mb }}'
#    - option: 'machine_id'
#      value: '{{ ansible_machine_id }}'
    - option: 'product_id'
      value: '{{ ansible_product_uuid }}'
#    - option: 'library_gb'
#      value: '{{ ansible_devices.sda.partitions.sda3.size }}'

# Put all computed vars here so derive properly from any prior var file

- name: Turn on mysql if elgg or rachel enabled
  set_fact:
    mysql_install: True
    mysql_enabled: True
  when: elgg_enabled or rachel_enabled or owncloud_enabled

# There might be other db's
- name: Turn on postgresql if moodle or pathagar enabled
  set_fact:
    postgresql_install: True
    postgresql_enabled: True
  when: moodle_enabled or pathagar_enabled

# for various reasons the mysql service can not be enabled on fedora 20,
# but 'mariadb', which is its real name can
# on fedora 18 we need to use 'mysqld'

- name: Set mysqld service name to mariadb by default
  set_fact:
    mysql_service: mariadb

- name: Set mysqld service name to mysqld for fedora 18
  set_fact:
    mysql_service: mysqld
  when: ansible_distribution_release == "based on Fedora 18" or ansible_distribution_version == "18"

- name: Set kiwix source file name i686
  set_fact:
     kiwix_src_file: "kiwix-linux-i686.tar.bz2"
     kiwix_src_bin_only: False
  when: ansible_machine == "i686"

- name: Set kiwix source file name x86_64
  set_fact:
     kiwix_src_file: "kiwix-0.9-linux-x86_64.tar.bz2"
     kiwix_src_bin_only: False
  when: ansible_machine == "x86_64"

- name: Set kiwix source file name armv7l
  set_fact:
     kiwix_src_file: "kiwix-server-0.9-linux-armv5tejl.tar.bz2"
     kiwix_src_bin_only: True
  when: ansible_machine == "armv7l"

- name: Disable some install routines for CentOS
  set_fact:
    sugar-stats_install: False
    sugar-stats_enabled: False
    ajenti_install: False
    ajenti_enabled: False
  when: ansible_distribution == "CentOS"
