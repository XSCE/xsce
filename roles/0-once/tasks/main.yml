- include: fl.yml
- include: prep.yml
- include: xsce_ini.yml
- include: "{{xsce_dir}}/roles/1-prep/tasks/distros.yml"

#- include: xo.yml
#  when: xo_model != "none" or osbuilder is defined

- include: centos.yml
  when: ansible_distribution == "CentOS"

- include: packages.yml
  when: not ansible1 and ansible_distribution == "Fedora"

- include: yum.yml
#exclude this once the package port is done
#  when: ansible1

- include: chrony.yml
- include: cmdsrv.yml

- include: fedora.yml
  when: ansible_distribution == "Fedora"

- include: fix_ansible_version.yml

- include: prelim.yml
- include: patch_udev.yml
- include: net_mods.yml

# Put conditional includes for platforms here
##  DISCOVER PLATFORMS ######
- name: Discover if this is a rpi2 -- if so it has a bcm2709 processor
  set_fact: 
     rpi_model: "rpi2"
  when:  ansible_cmdline["bcm2709.serial"]  is defined
  ignore_errors: true

- name: Check of the identifier for tplink725 is present
  shell: "lsusb | grep 0bda:8179 | wc |gawk '{print $1}'"
  register: usb_response
  ignore_errors: true

- name: Use compiled hostapd, and wpa_supplicant if tplink WM725M
  set_fact:
     wifi_id: tplink_WM725M
  when:  usb_response.stdout|int > 0

- include: hw_rpi2.yml
  when: rpi_model is defined and rpi_model == "rpi2"

- name: Check if the identifier for intel's NUC6 builtin wifi is present
  shell: "lsusb | grep 8087:0a2b | wc |gawk '{print $1}'"
  register: usb_NUC6
  ignore_errors: true

- name: download the firmware for built in wifi on NUC6
  get_url: dest=/lib/firmware
           url={{ xsce_download_url }}/iwlwifi-8000C-13.ucode
  when:  usb_NUC6.stdout|int > 0

# need to add proper download section and get the binary out of git
- name: copy  the firmware for tplink WM752M
  copy: src=rtl8188eufw.bin dest=/lib/firmware/rtlwifi/
  when: wifi_id  ==  "tplink_WM725M" and xo_model == "none" and not rpi_model is defined
  ignore_errors: true

- name: Remove preload to force fresh downloading in stage2
  file: path=/.preload
        state=absent

- name: Editing /etc/sysconfig/selinux
  lineinfile: state=present
              backrefs=yes
              regexp='^SELINUX='
              line='SELINUX=disabled'
              dest=/etc/sysconfig/selinux
  when: ansible_distribution == "CentOS" or ansible_distribution == "Fedora"
 
- include: selinux.yml
  when: ansible_selinux is defined and ansible_version >= '2' and ansible_selinux or ansible_selinux['status'] is defined and ansible_version < '2' and ansible_selinux['status'] != 'disabled'
