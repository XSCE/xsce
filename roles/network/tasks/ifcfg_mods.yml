- name: Stop the Access Point Hostapd program
  service: name=hostapd.service
           state=stopped
  when: xsce_wireless_lan_iface != "none"

- name: Stop the LAN/Bridge deleting xsce-LAN
  shell: nmcli con delete id xsce-LAN
  ignore_errors: True
  changed_when: False
  when: xsce_prepped and (num_lan_interfaces != "0" or xsce_wireless_lan_iface != "none")

# clear all bridge ifcfg files
- name: Now delete slave bridge ifcfg files
  shell: rm -f /etc/sysconfig/network-scripts/ifcfg-"{{ item }}"
  when: num_lan_interfaces != "0" or xsce_wireless_lan_iface != "none"
  with_items:
    - "{{ ifcfg_slaves.stdout_lines }}"

## vars/ users should set user_wan_iface to avoid messy redetect
- include: redetect.yml
  when: discovered_wan_iface == "none" and user_wan_iface == "auto"

# move gateway if not WAN
# might have wifi info if wireless is used as uplink.
- include: edit_ifcfg.yml
  when: has_wifi_gw == "none" and has_ifcfg_gw != "none" and has_ifcfg_gw != "/etc/sysconfig/network-scripts/ifcfg-WAN"

# create ifcfg-WAN if missing
# if we get here we have gateway but no ifcfg file
- include: create_ifcfg.yml
  when: xsce_wan_iface != "none" and not has_WAN and has_ifcfg_gw == "none" and xo_model == "none"

- name: Configuring LAN interface as xsce_lan_iface
  template: src=network/ifcfg.j2
            dest=/etc/sysconfig/network-scripts/ifcfg-LAN
  when: xsce_lan_iface != "none"

# can be more than one wired interface
- name: Wired enslaving ## lan_list_result ## to Bridge
  template: src=network/ifcfg-slave.j2
            dest=/etc/sysconfig/network-scripts/ifcfg-{{ item|trim }}
  when: xsce_lan_iface == "br0" and item|trim != xsce_wireless_lan_iface and item|trim != discovered_wan_iface
  with_items:
      - "{{ lan_list_result.stdout_lines }}"

- name: WiFi enslaving {{ xsce_wireless_lan_iface }} to Bridge
  template: src=network/wifi-slave.j2
            dest=/etc/sysconfig/network-scripts/ifcfg-{{ xsce_wireless_lan_iface }}
  when: xsce_lan_iface == "br0" and xsce_wireless_lan_iface != "none"

- include: enable_wan.yml
  when: not installing

- name: confirm xsce-WAN device is available
  shell: nmcli c | grep xsce-WAN | awk '{print $4}'
  register: WAN_active
  when: xsce_wan_iface != "none" and has_wifi_gw == "none" and not installing

- name: Stop 'Wired WAN connection'
  shell: nmcli dev disconnect {{ discovered_wan_iface }}
  ignore_errors: True
  changed_when: False
  when: WAN_active != discovered_wan_iface and WAN_active is defined
  with_items:
      - "{{ WAN_active.stdout_lines }}"

# monitor-connection-files defaults to no with F21, F18-F20 defaults to yes
- name: Re-read network config files
  shell: nmcli con reload | sleep 5
  when: not installing and not no_NM_reload

# test point, we should always have one with any kind of starting point
# no ifcfg = supply
# had but not WAN = rename and edit if wired, skip wifi gateway.
# test point, confirm onboot=no is OK everywhere

- name: Enabling pre-existing ifcfg-WAN file
  shell: nmcli conn up id xsce-WAN
  when: has_WAN and xsce_wan_iface != "none" and not installing

- name: Enabling ifcfg-LAN file
  shell: nmcli conn up id xsce-LAN
  ignore_errors: True
  when: xsce_lan_iface != "none" and not installing

# we could do the DEVICE name stuff for a cleaner looking nmcli 
- name: Enabling ifcfg slaves
  shell: nmcli conn up id "System {{ item|trim }}"
  when: xsce_lan_iface == "br0" and item|trim != xsce_wireless_lan_iface
  with_items:
      - "{{ lan_list_result.stdout_lines }}"
# testpoint confirm with 'nmcli c show' 'brctl show'
