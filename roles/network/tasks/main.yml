- name: Create olpc-scripts directory
  file: path={{ item }}
        owner=root
        group=root
        mode=0755
        state=directory
  with_items:
    - /etc/sysconfig/olpc-scripts/
    - /etc/sysconfig/olpc-scripts/setup.d/installed/

- name: Set hostname
  template: backup=yes
            dest=/etc/hostname
            src=network/hostname.j2
            owner=root
            mode=0644

- name: Create xs network flags
  template: backup=yes
            src=network/{{ item }}.j2
            dest=/etc/sysconfig/{{ item }}
            mode=0644
  with_items:
    - xs_wan_device
    - xs_lan_device
    - xs_domain_name
  tags:
    - network-discover

- name: Configure /etc/sysconfig/network
  template: backup=yes
            src=network/sysconfig.network.j2
            dest=/etc/sysconfig/network
            owner=root
            group=root
            mode=0644

#TODO: Use vars instead of hardcoded values
- name: Configure /etc/hosts
  lineinfile: backup=yes
              dest=/etc/hosts
              regexp='^172\.18\.96\.1'
              line='172.18.96.1            {{ xsce_hostname }}.{{ xsce_domain }}      {{ xsce_hostname }}'
              owner=root
              group=root
              mode=0644

- name: Configure /etc/hosts
  lineinfile: backup=yes
              dest=/etc/hosts
              regexp='^127\.0\.0\.1'
              line='127.0.0.1            localhost.localdomain   localhost   {{ xsce_hostname }}'
              owner=root
              group=root
              mode=0644

- name: Get a list of ifcfg files to delete
  shell: "ls -1 /etc/sysconfig/network-scripts/ifcfg-* | grep -v -e ifcfg-lo "
  register: ifcfg_files
  ignore_errors: True
  changed_when: False

- name: Now get them out of the way
  shell: "rm -f {{ item }} "
  with_items:
    - "{{ ifcfg_files.stdout_lines }}"
 
- name: Configure lan interface
  template: backup=yes
            src=network/ifcfg.j2
            dest=/etc/sysconfig/network-scripts/ifcfg-LAN
  when: xsce_lan_iface != "none"

- name: enslaving LAN device to Bridge
  template: src=network/ifcfg-slave.j2
            dest=/etc/sysconfig/network-scripts/ifcfg-{{ item|trim }}
  when: num_lan_interfaces > "0" and xsce_lan_iface == "br0"
  with_items:
      - "{{ lan_list_result.stdout_lines }}"
- name: Delete any bridge add interface lines in rc.local
  lineinfile: regexp="^/usr/sbin/brctl.*"
              state=absent
              dest=/etc/rc.d/rc.local

- name: Connect LAN device(s) to Bridge
  lineinfile: line="/usr/sbin/brctl addif br0 {{ item|trim }}"
              dest=/etc/rc.d/rc.local
  when: num_lan_interfaces > "0" and xsce_lan_iface == "br0" and item|trim != xsce_wan_iface
  with_items:
      - "{{ lan_list_result.stdout_lines }}"

# supply an ifcfg if no gateway detected but wan_ip is set
# set user_wan_iface: <device> and use wan_* for static info
- name: Supply wan interface file
  template: src=network/ifcfg-WAN.j2
            dest=/etc/sysconfig/network-scripts/ifcfg-WAN
  when: 'xsce_wan_iface != "none" and wan_ip != "dhcp"'

- include: NM.yml
  when: 'xsce_wan_iface != "none" and wan_ip != "dhcp"'

- name: use upstream nameserver until named is installed
  lineinfile: dest=/etc/resolv.conf
              line='nameserver {{wan_nameserver}}'
              create=yes
              state=present
  when: 'xsce_wan_iface != "none" and wan_ip != "dhcp"'

- include: named.yml
  tags:
    - named
    - network

- include: dhcpd.yml
  tags:
    - dhcpd
    - network

- include: squid.yml
  tags:
    - squid
    - network

- include: wondershaper.yml
  tags:
    - wondershaper
    - network

- include: iptables.yml
  tags:
    - iptables
    - network

- name: Create gateway flag
  shell: echo 1 > /etc/sysconfig/olpc-scripts/setup.d/installed/gateway
         creates=/etc/sysconfig/olpc-scripts/setup.d/installed/gateway

- include: NM.yml
  tags:
    - network
  
